def make_periodic_table():
    """Create and return a list containing the elements of the periodic table."""
    return [
        ["H", "Hydrogen", 1.00794],
        ["He", "Helium", 4.002602],
        ["Li", "Lithium", 6.941],
        ["Be", "Beryllium", 9.012182],
        ["B", "Boron", 10.811],
        ["Ac", "Actinium", 227],
        ["Ag", "Silver", 107.8682],
        ["Al", "Aluminum", 26.9815386],
        ["Ar", "Argon", 39.948],
        ["As", "Arsenic", 74.9216],
        ["At", "Astetine", 210],
        ["Au", "Gold", 196.966569],
        ["Ba","Barium",137.327],
        ["Bi","Bismuth",208.9804],
        ["Br","Bromine",79.904],
        ["C","Carbon",12.0107],
        ["Ca","Calcium",40.078],
        ["Cd","Cadmium",112.411],
        ["Ce","Cerium",140.116],
        ["Cl","Chlorine",35.453],
        ["Co","Cobalt",58.9333195],
        ["Cr","Chromium",51.9961],
        ["Cs","Cesium",132.9054519],
        ["Cu","Copper",63.546],
        ["Dy","Dysprosium",162.5],
        ["Er","Erbium",167.259],
        ["Eu","Europium",151.964],
        ["F","Fluorine",18.9984032],
        # Añade aquí el resto de elementos
    ]

def main():
    """Main function to interact with the user."""
    # Get the chemical formula and sample mass from the user (not yet processed for real use)
    chemical_formula = input("Enter the chemical formula of the molecule: ")
    sample_mass = float(input("Enter the mass of the chemical sample in grams: "))

    # Call the make_periodic_table function and store the list
    periodic_table = make_periodic_table()

    # For this initial part, just print out the names and atomic masses of the elements
    for element in periodic_table:
        symbol, name, atomic_mass = element
        print(f"{name}: {atomic_mass} g/mol")

if __name__ == "__main__":
    main()